<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vreads.backend.mapper.VreadsMapper">
	
	<!-- Vread 등록하기 -->
	<insert id="insertVread" parameterType="VreadsVO">
	INSERT INTO vreads_webapp.vreads
		(
			vreads_idx, 
			mem_idx, 
			vd_vtTitle, 
			vd_vtDetail, 
			vd_media_1, 
			vd_media_2, 
			vd_media_3, 
			vd_subtag, 
			vd_comment_idx, 
			vd_createDate, 
			vd_modifyDate
		)
		VALUES
		(
			NULL, 
			#{mem_idx}, 
			#{vd_vtTitle}, 
			#{vd_vtDetail}, 
			#{vd_media_1}, 
			#{vd_media_2}, 
			#{vd_media_3}, 
			#{vd_subtag}, 
			#{vd_comment_idx}, 
			now(), 
			NULL
		);
	</insert>
	
	<!-- Vread 업데이트 -->
		<update id="updateVread" parameterType="VreadsVO">
		  UPDATE vreads 
		  SET vd_vtTitle=#{vd_vtTitle}
		  	, vd_vtDetail=#{vd_vtDetail}
			, vd_subtag = #{vd_subtag}
		  	, vd_media_1=#{vd_media_1} 
		  	, vd_modifyDate= now()
		  WHERE vreads_idx = #{vreads_idx}
		</update>
	
	<!-- Vread 삭제 처리 -->
	<delete id="deleteVread">
		DELETE FROM vreads
			WHERE vreads_idx = #{vreads_idx}
	</delete>
	
	<!-- 특정 유저 Vreads 불러오기-->
	<!-- 부등호 사용시 <![CDATA[부등호]]> 사용 -->
		<!-- serchType -->
	<!-- 1 = 제목검색 -->
	<!-- 2 = 제목과 타이틀 검색 -->
	<!-- 3 = 서브태그 검색 -->
	<select id="selectUserVreads" resultType="VreadsVO">
		select vreads_idx, v.mem_idx , mem_nickname ,mem_profileImageUrl , vd_vtTitle, vd_vtDetail, vd_media_1, vd_media_2, vd_media_3, vd_subtag, vd_comment_idx, vd_createDate, vd_modifyDate  
		from 
			vreads v
			left join  
			mem_info mi on v.mem_idx = mi.mem_idx 
		where v.mem_idx = #{userIdx}
			AND vd_createDate <![CDATA[<]]> #{searchDate} 
		<if test="searchType == 1">
			AND vd_vtTitle LIKE #{keyword}
		</if>
		<if test="searchType == 2">
			AND 
			(
				vd_vtTitle LIKE #{keyword}
				OR vd_vtDetail LIKE #{keyword}
			)
		</if>
		<if test="searchType == 3">
			AND vd_subtag = #{keyword}
		</if>
		order by vd_createDate desc
		limit #{startCount}, #{setPageListLimit}
		;
	</select>

	<!-- 특정 Vreads 하나만 불러오기-->
	<select id="selectVreadDetail" resultType="VreadsVO">
		select vreads_idx, v.mem_idx , mem_nickname ,mem_profileImageUrl , vd_vtTitle, vd_vtDetail, vd_media_1, vd_media_2, vd_media_3, vd_subtag, vd_comment_idx, vd_createDate, vd_modifyDate  
		from 
			vreads v
			left join  
			mem_info mi on v.mem_idx = mi.mem_idx 
		where vreads_idx = #{vreadsIdx}
		limit 1
		;
	</select>

	<!-- Vreads 조건 없이 불러오기 -->
	<select id="selectAllVreads" resultType="VreadsVO">
		select vreads_idx, v.mem_idx , mem_nickname ,mem_profileImageUrl , vd_vtTitle, vd_vtDetail, vd_media_1, vd_media_2, vd_media_3, vd_subtag, vd_comment_idx, vd_createDate, vd_modifyDate  
		from 
			vreads v
			left join  
			mem_info mi on v.mem_idx = mi.mem_idx 
		where vd_createDate <![CDATA[<]]> #{searchDate} 
		order by vd_createDate desc
		limit #{startCount}, #{setPageListLimit}
		;
	</select>

	<!-- search type 과 keyword 에 맞춰서 Vreads 불러오기-->
	<!-- serchType -->
	<!-- 1 = 제목검색 -->
	<!-- 2 = 제목과 타이틀 검색 -->
	<!-- 3 = 서브태그 검색 -->
	<select id="selectSearchVreads" resultType="VreadsVO">
		select vreads_idx, v.mem_idx , mem_nickname ,mem_profileImageUrl , vd_vtTitle, vd_vtDetail, vd_media_1, vd_media_2, vd_media_3, vd_subtag, vd_comment_idx, vd_createDate, vd_modifyDate  
		from 
			vreads v
			left join  
			mem_info mi on v.mem_idx = mi.mem_idx 
		where vd_createDate <![CDATA[<]]> #{searchDate} 
		<if test="searchType == 1">
			AND vd_vtTitle LIKE #{keyword}
		</if>
		<if test="searchType == 2">
			AND 
			(
				vd_vtTitle LIKE #{keyword}
				OR vd_vtDetail LIKE #{keyword}
			)
		</if>
		<if test="searchType == 3">
			AND vd_subtag = #{keyword}
		</if>

		order by vd_createDate desc
		limit #{startCount}, #{setPageListLimit}
		;
	</select>
	
	<select id="selectSubtagList" resultType="map">
		select vd_subtag, COUNT(*) as vd_subtag_count 
		from vreads v 
		where vd_subtag != "" 
		<if test="searchType == 0">
			AND vd_createDate <![CDATA[>]]> #{searchDate}
		</if>
		<if test="searchType == 1">
			AND mem_idx = #{userIdx}
		</if> 
		group by vd_subtag 
		order by vd_subtag_count desc
		limit #{startCount}, #{setPageListLimit}
	</select>
	
</mapper>
